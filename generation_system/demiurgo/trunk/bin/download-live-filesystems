#! /bin/sh
set -e

export CDIMAGE_ROOT="${CDIMAGE_ROOT:-/var/cdimage}"
. "$CDIMAGE_ROOT/etc/config"
. "$CDIMAGE_ROOT/bin/functions.sh"

LIVE_OUT="$CDIMAGE_ROOT/scratch/$PROJECT/$IMAGE_TYPE/live"

fetch () {
	case $1 in
		/*)
			ln "$1" "$2"
			;;
		*)
			ret=0
			wget -nv "$1" -O "$2" || ret=$?
			if [ "$ret" -ne 0 ]; then
				rm -f "$2"
			fi
			return $ret
			;;
	esac
}

mkemptydir "$LIVE_OUT"
for arch in $CPUARCHES; do
#	if fetch "$(find-live-filesystem "$arch" cloop)" \
#			"$LIVE_OUT/$arch.cloop"; then
#		:
#	elif fetch "$(find-live-filesystem "$arch" squashfs)" \
#			"$LIVE_OUT/$arch.squashfs"; then
	if fetch "$(find-live-filesystem "$arch" squashfs)" \
			"$LIVE_OUT/$arch.squashfs"; then
		:
	else
		continue
	fi
	case $DIST in
		warty|hoary|breezy)
			;;
		*)
			for item in kernel initrd; do
				for url in $(find-live-filesystem "$arch" "$item"); do
					subarch="${url##*/}"
					subarch="${subarch#*.*.*-}"
					fetch "$url" "$LIVE_OUT/$arch.$item-$subarch" || true
				done
			done
			;;
	esac
	fetch "$(find-live-filesystem "$arch" manifest)" \
		"$LIVE_OUT/$arch.manifest" || true
	fetch "$(find-live-filesystem "$arch" manifest-desktop)" \
		"$LIVE_OUT/$arch.manifest-desktop" || true
done

# We need space, so no opencd software.
# TheOpenCD goes on the amd64/i386 live CDs.
#for arch in $CPUARCHES; do
#	if winfoss="$(find-live-filesystem "$arch" winfoss)"; then
#		if [ -f $CDIMAGE_ROOT/live/$DIST/$PROJECT/current/ubuntu-winfoss-6.10.tar.gz ]; then
#			echo " We already have ubuntu-winfoss-6.10.tar.gz..."
#			fetch "$winfoss" "$LIVE_OUT/$arch.winfoss.tgz"	
#		else
#			echo " Downloading ubuntu-winfoss-6.10.tar.gz..."
#			fetch "$winfoss" $CDIMAGE_ROOT/live/$DIST/$PROJECT/current/ubuntu-winfoss-6.10.tar.gz
#			fetch $CDIMAGE_ROOT/live/$DIST/$PROJECT/current/ubuntu-winfoss-6.10.tar.gz "$LIVE_OUT/$arch.winfoss.tgz"
#		fi
#	fi
#done
