#!/bin/bash

. ./repo.conf

# Steady...
[ ! -d $GUADA_PACKAGES ] && mkdir -p $GUADA_PACKAGES

DATE=$(date +%Y%m%d)

function clean_debian_files ()
{
	DIR=$1
	echo
	echo " === Cleaning deb files under $DIR ==="
	echo
	#[ -f $DIR/*deb ] && rm $DIR/*deb
	#[ -f $DIR/*tar.gz ] && rm $DIR/*tar.gz
	#[ -f $DIR/*dsc ] && rm $DIR/*dsc
	[ -f $DIR/*build ] && rm $DIR/*build
	[ -f $DIR/*changes ] && rm $DIR/*changes
}

# Get the 
cd $SVN_ROOT > /dev/null
svn up > /tmp/repository-stuff.$USER.$DATE
[ "$?" != "0" ] && echo " * * * * * Problems updating repository * * * * *" && exit 1
REPO_VERSION=$(cat /tmp/repository-stuff.$USER.$DATE | tail -1 | sed -e 's/.*\ //g' | sed -e 's/\.//g')
cd - > /dev/null

echo
echo "Repository version: $REPO_VERSION"
echo

# Look for all the packages under customize_system, compile it and include and copy to guada-packages.
for x in $(find $SVN_ROOT/customize_system -name trunk)
do
	echo
	echo " === Going to $x... ==="
	echo
	if [ -d $x/gcs ]; then
	        cd $x
		cp gcs/info gcs/info.back
		sed -i "s/^version\:.*/version: r$REPO_VERSION/g" gcs/info
	        gcs_build
		mv gcs/info.back gcs/info
	        mv $x/../*deb $GUADA_PACKAGES
		clean_debian_files $x/..
		rm -rf $x/debian
	        cd - > /dev/null
	fi
done

# Look for all the application released (under a tag dir), compile it and include and copy to guada-packages.
for TAG_DIR in $(find $SVN_ROOT -name tags)
do
	for TAG_VERSION in $(ls $TAG_DIR)
	do
		echo
		echo " === Going to $TAG_DIR/$TAG_VERSION ... ==="
		echo
		cd $TAG_DIR/$TAG_VERSION
		debuild -uc -us
		debclean
		mv $TAG_DIR/$TAG_VERSION/../*deb $GUADA_PACKAGES
		clean_debian_files $TAG_DIR/$TAG_VERSION
		cd - > /dev/null
	done
done

# Packages needed by the installer or generation system
for x in $(find $SVN_ROOT/customize_system/packages -name debian)
do
	echo
	echo " === Going to $x/.. ... ==="
	echo
	cd $x/..
	debuild -uc -us
	debclean
	mv $x/../../*deb $GUADA_PACKAGES
	clean_debian_files $x/../..
	cd - > /dev/null
done
